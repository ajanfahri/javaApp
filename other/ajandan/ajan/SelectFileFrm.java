/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajan;

import static ajan.ajanframe.dxfVectWithOff;
import com.google.common.io.Files;
import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import static java.lang.Thread.sleep;
import java.nio.file.StandardCopyOption;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;


/**
 *
 * @author ajanuser
 */
public class SelectFileFrm extends javax.swing.JDialog {

    public static int toggle=0;
    public static boolean dxfessiadd=false;
    public static File showPath=null;
    public static String userPath=null;
    /**
     * Creates new form SelectFileFrm
     */
    public SelectFileFrm() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dxfView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        dxfView.setBackground(new java.awt.Color(255, 255, 255));
        dxfView.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                dxfViewMouseWheelMoved(evt);
            }
        });

        javax.swing.GroupLayout dxfViewLayout = new javax.swing.GroupLayout(dxfView);
        dxfView.setLayout(dxfViewLayout);
        dxfViewLayout.setHorizontalGroup(
            dxfViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
        );
        dxfViewLayout.setVerticalGroup(
            dxfViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("jLabel1");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dxfView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(dxfView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private class FolderFilter extends javax.swing.filechooser.FileFilter {
  @Override
  public boolean accept( File file ) {
    return file.isDirectory();
  }

  @Override
  public String getDescription() {
    return "We only take directories";
  }
}
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        String onlypath=showPath.getPath();
        JFileChooser chooser = new JFileChooser();
        chooser.setPreferredSize(new Dimension(500,500));
        chooser.setCurrentDirectory(new File(onlypath.substring(0,onlypath.lastIndexOf(File.separator))));
        //chooser.setSelectedFile(showPath);
            //chooser.setSelectedFile(new File(Files.getNameWithoutExtension(showPath.getPath())));
            
            //chooser.setControlButtonsAreShown(false);
            chooser.setFileFilter(new FolderFilter());
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            //chooser.showOpenDialog(null);
                
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal== JFileChooser.APPROVE_OPTION) {
                
                showPath=chooser.getSelectedFile();
                ReadDirectory();

            }

    }//GEN-LAST:event_jLabel1MouseClicked

    private static void copyFileUsingStream(File source, File dest) throws IOException {
    InputStream is = null;
    OutputStream os = null;
    try {
        is = new FileInputStream(source);
        os = new FileOutputStream(dest);
        byte[] buffer = new byte[1024];
        int length;
        while ((length = is.read(buffer)) > 0) {
            os.write(buffer, 0, length);
        }
    } finally {
        is.close();
        os.close();
    }
    }
    
    public File movetoajanfile(File gelenFile) throws IOException{
    String onlypath=gelenFile.getPath();
    onlypath=onlypath.substring(0,onlypath.lastIndexOf(File.separator));
    File sonuc=new File(userPath+File.separator+gelenFile.getName());
    if(!onlypath.equalsIgnoreCase(userPath)){
        
      copyFileUsingStream(gelenFile, sonuc);
    }
    return sonuc;
    }
    
    
    private getDxf rf;

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            File secilenFile=null;
            try {
                secilenFile=movetoajanfile(new File(showPath.getPath()+File.separator+jList1.getSelectedValue()));
            } catch (IOException ex) {
                Logger.getLogger(SelectFileFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           // movetoajanfolder(secilenFile);
           if(secilenFile!=null){
               
                rf = new getDxf();
                
                rf.setFile(new File(showPath.getPath()+File.separator+jList1.getSelectedValue()));
                if(toggle==4){
                  dxfVectWithOff.addAll(rf.getvectors());
                   Graph.canvas1.repaint();
               }
               else{
                if(dxfessiadd)ajanframe.gecerliproje.kesimdosyasiEkle(rf.file, rf.getvectors());
                else {
                        ajanframe.geciciFile=new File(showPath.getPath()+File.separator+jList1.getSelectedValue());
           
                    }
                }
                dispose();
           }
        }
        
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
             rf = new getDxf();
            //rf.setFile(new File(showPath.getPath()+"\\"+jList1.getSelectedValue()));
            rf.setFile(new File(showPath.getPath()+File.separator+jList1.getSelectedValue()));
            rf.scala = 0.007;
            rf.setJPanel(dxfView);
            try {
                rf.ciz();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FileBrowser.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jList1ValueChanged

    private void dxfViewMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_dxfViewMouseWheelMoved
        // TODO add your handling code here:
            if (evt.getWheelRotation() < 0) {
                        rf.ScalaaArtir();
                    } else {
                        rf.ScalaaAzalt();
                    }
                    try {
                        rf.ciz();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(FileBrowser.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }//GEN-LAST:event_dxfViewMouseWheelMoved
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectFileFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectFileFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectFileFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectFileFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             
                new SelectFileFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dxfView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
    
     public void ReadDirectory() {
        //String path = "C://Documents and Settings/myfileTxt";
        if(showPath!=null){
            jLabel1.setText("Location : "+showPath.getPath());
        String files = null;
        File folder = new File(showPath.getPath());
        File[] listOfFiles = folder.listFiles();
        Arrays.sort(listOfFiles);//rev20 isim sirasina göre diz
DefaultListModel listModel = new DefaultListModel();

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                files = listOfFiles[i].getName();
                
                if ((files.endsWith(".dxf") || files.endsWith(".DXF"))&&(toggle==0||toggle==2)) {
                listModel.addElement(files);
                }
                else if ((files.endsWith(".mpg") || files.endsWith(".MPG")||files.endsWith(".b3") || files.endsWith(".B3"))&&toggle==1||toggle==2) {
                    listModel.addElement(files);
                }
                else if ((files.endsWith(".cam") || files.endsWith(".CAM"))&&toggle==3||toggle==2) {
                    listModel.addElement(files);
                }
                  else if ((files.endsWith(".aja") || files.endsWith(".AJA"))&&toggle==4||toggle==2) {
                    listModel.addElement(files);
                }
            }
            
        }
        jList1.setModel(listModel);
        
    }
     }
}
