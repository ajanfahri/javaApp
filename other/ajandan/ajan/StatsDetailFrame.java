/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajan;


import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ajanuser
 */
public class StatsDetailFrame extends javax.swing.JFrame {

    /**
     * Creates new form StatsDetailFrame
     */
    private  Statement stmt= null;
    private static ResultSet rs =null;//new ResultSet();
    private int indexNo=0;

    public void setIndexNo(int indexNo) {
        this.indexNo = indexNo;
        tabloDoldur();
    }
    
    public StatsDetailFrame() {
        
        initComponents();
    
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ProjectNameBundle = new javax.swing.JLabel();
        ProjectDateBundle = new javax.swing.JLabel();
        ProjectNameLabel = new javax.swing.JLabel();
        ProjectDateLabel = new javax.swing.JLabel();
        OperatorNameBundle = new javax.swing.JLabel();
        OperatorNameLabel = new javax.swing.JLabel();
        JobStartTimeBundle = new javax.swing.JLabel();
        JobEndTimeBundle = new javax.swing.JLabel();
        JobStartTimeLabel = new javax.swing.JLabel();
        JobEndTimeLabel = new javax.swing.JLabel();
        MachineTypeBundle = new javax.swing.JLabel();
        MaterialBundle = new javax.swing.JLabel();
        CurrentBundle = new javax.swing.JLabel();
        GasesBundle = new javax.swing.JLabel();
        CutTypeBundle = new javax.swing.JLabel();
        ThicknessBundle = new javax.swing.JLabel();
        MachineTypeLabel = new javax.swing.JLabel();
        MaterialLabel = new javax.swing.JLabel();
        CurrentLabel = new javax.swing.JLabel();
        GasesLabel = new javax.swing.JLabel();
        CutTypeLabel = new javax.swing.JLabel();
        ThicknessLabel = new javax.swing.JLabel();
        StartWithBundle = new javax.swing.JLabel();
        StopWithBundle = new javax.swing.JLabel();
        StartWithLabel = new javax.swing.JLabel();
        StopWithLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        SavePDFButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ProjectNameBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        ProjectNameBundle.setForeground(new java.awt.Color(255, 51, 51));
        ProjectNameBundle.setText("PROJECT NAME :");

        ProjectDateBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        ProjectDateBundle.setForeground(new java.awt.Color(255, 51, 51));
        ProjectDateBundle.setText("PROJECT DATE     :");

        ProjectNameLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ProjectNameLabel.setText("jLabel3");

        ProjectDateLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ProjectDateLabel.setText("jLabel3");

        OperatorNameBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        OperatorNameBundle.setForeground(new java.awt.Color(255, 51, 51));
        OperatorNameBundle.setText("OPERATOR NAME :");

        OperatorNameLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        OperatorNameLabel.setText("jLabel3");

        JobStartTimeBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        JobStartTimeBundle.setForeground(new java.awt.Color(255, 51, 51));
        JobStartTimeBundle.setText("JOB START TIME   :");

        JobEndTimeBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        JobEndTimeBundle.setForeground(new java.awt.Color(255, 51, 51));
        JobEndTimeBundle.setText("JOB END TIME     :");

        JobStartTimeLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        JobStartTimeLabel.setText("jLabel3");

        JobEndTimeLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        JobEndTimeLabel.setText("jLabel3");

        MachineTypeBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        MachineTypeBundle.setForeground(new java.awt.Color(255, 51, 51));
        MachineTypeBundle.setText("MACHINE TYPE :");

        MaterialBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        MaterialBundle.setForeground(new java.awt.Color(255, 51, 51));
        MaterialBundle.setText("MATERIAL");

        CurrentBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        CurrentBundle.setForeground(new java.awt.Color(255, 51, 51));
        CurrentBundle.setText("CURRENT");

        GasesBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        GasesBundle.setForeground(new java.awt.Color(255, 51, 51));
        GasesBundle.setText("GASES");

        CutTypeBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        CutTypeBundle.setForeground(new java.awt.Color(255, 51, 51));
        CutTypeBundle.setText("CUTTYPE");

        ThicknessBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        ThicknessBundle.setForeground(new java.awt.Color(255, 51, 51));
        ThicknessBundle.setText("THICKNESS");

        MachineTypeLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        MachineTypeLabel.setText("jLabel3");

        MaterialLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        MaterialLabel.setText("jLabel3");

        CurrentLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        CurrentLabel.setText("jLabel3");

        GasesLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        GasesLabel.setText("jLabel3");

        CutTypeLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        CutTypeLabel.setText("jLabel3");

        ThicknessLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ThicknessLabel.setText("jLabel3");

        StartWithBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        StartWithBundle.setForeground(new java.awt.Color(255, 51, 51));
        StartWithBundle.setText("START WITH :");

        StopWithBundle.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        StopWithBundle.setForeground(new java.awt.Color(255, 51, 51));
        StopWithBundle.setText("STOP WITH   :");

        StartWithLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        StartWithLabel.setText("jLabel3");

        StopWithLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        StopWithLabel.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OperatorNameBundle)
                    .addComponent(ProjectDateBundle)
                    .addComponent(JobStartTimeBundle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OperatorNameLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ProjectDateLabel)
                            .addComponent(JobStartTimeLabel))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ProjectNameBundle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProjectNameLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JobEndTimeBundle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JobEndTimeLabel)))
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(StopWithBundle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StopWithLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(StartWithBundle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StartWithLabel)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MachineTypeBundle)
                    .addComponent(MaterialBundle)
                    .addComponent(CurrentBundle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CurrentLabel)
                    .addComponent(MaterialLabel)
                    .addComponent(MachineTypeLabel))
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GasesBundle)
                    .addComponent(CutTypeBundle)
                    .addComponent(ThicknessBundle))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CutTypeLabel)
                    .addComponent(GasesLabel)
                    .addComponent(ThicknessLabel))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MachineTypeBundle)
                            .addComponent(GasesBundle)
                            .addComponent(MachineTypeLabel)
                            .addComponent(GasesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MaterialBundle)
                            .addComponent(CutTypeBundle)
                            .addComponent(MaterialLabel)
                            .addComponent(CutTypeLabel))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CurrentBundle)
                            .addComponent(ThicknessBundle)
                            .addComponent(ThicknessLabel)
                            .addComponent(CurrentLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProjectDateBundle)
                            .addComponent(ProjectDateLabel)
                            .addComponent(ProjectNameBundle)
                            .addComponent(ProjectNameLabel)
                            .addComponent(StartWithBundle)
                            .addComponent(StartWithLabel))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(OperatorNameBundle)
                                    .addComponent(OperatorNameLabel)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(StopWithBundle)
                                    .addComponent(StopWithLabel))))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JobStartTimeBundle)
                            .addComponent(JobStartTimeLabel)
                            .addComponent(JobEndTimeBundle)
                            .addComponent(JobEndTimeLabel))))
                .addGap(10, 10, 10))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        detailTable.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        detailTable.setForeground(new java.awt.Color(255, 51, 51));
        detailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"CALCULATED VALUES", null, null, null, "REAL VALUES"},
                {"TOTAL CUTTING LEGHT", null, null, null, "FINISHED CUTTING LENGHT"},
                {"TOTAL MARKING LENGHT", null, null, null, "FINISHED MARKING LENGHT"},
                {"TOTAL TRAVELING LENGHT", null, null, null, "FINISHED TRAVELING LENGHT"},
                {"TOTAL LENGHT", null, null, null, "FINISHED TOTAL LENGHT"},
                {null, null, null, null, null},
                {"CUTTING PIERCE", null, null, null, "FINISHED CUTTING PIERCE"},
                {"MARKING PIERCE", null, null, null, "FINISHED MARKING PIERCE"},
                {"TOTAL PIERCE", null, null, null, "FINISHED TOTAL PIERCE"},
                {null, null, null, null, null},
                {"CUT SPEED", null, null, null, "REAL CUT SPEED"},
                {"MARK SPEED", null, null, null,"REAL MARK SPEED"},
                {"TRAVEL SPEED", null, null, null, "REAL TRAVEL SPEED"},
                {"SMALL HOLE SPEED", null, null, null, "REAL SMALL HOLE SPEED"},
                {null, null, null, null, null},
                {"ESTIMATED TIME", null, null, null, "ELLAPSED TIME"},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detailTable.setTableHeader(null);
        TableColumn tm = detailTable.getColumnModel().getColumn(3);
        tm.setCellRenderer(new ColorColumnRenderer(Color.lightGray, Color.blue));
        tm = detailTable.getColumnModel().getColumn(4);
        tm.setCellRenderer(new ColorColumnRenderer(Color.lightGray, Color.blue));
        detailTable.setRowHeight(30);
        jScrollPane1.setViewportView(detailTable);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        SavePDFButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SavePDFButton.setText("SAVE PDF");
        SavePDFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePDFButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1289, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SavePDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SavePDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:


    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
changeLocale();
    }//GEN-LAST:event_formWindowActivated

    private void SavePDFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePDFButtonActionPerformed
        // TODO add your handling code here:


    File pdfKayit=new File("pdfreport.pdf");
    javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
            
            //chooser.setCurrentDirectory(new File("/home/me/Documents"));
            chooser.setCurrentDirectory(new File(ajanframe.userDir));
            FileNameExtensionFilter ajnfilter = new FileNameExtensionFilter(
                "report files (*.pdf)", "pdf");
            chooser.setFileFilter(ajnfilter);
            int retrival = chooser.showSaveDialog(null);
            if (retrival == javax.swing.JFileChooser.APPROVE_OPTION) {

                if (chooser.getSelectedFile().getAbsolutePath().toLowerCase().endsWith(".pdf")) {
                    pdfKayit = chooser.getSelectedFile();
                } else {
                    pdfKayit = new File(chooser.getSelectedFile() + ".pdf");
                }

            }
    SavePdf(pdfKayit);


    }//GEN-LAST:event_SavePDFButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatsDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatsDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatsDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatsDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatsDetailFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CurrentBundle;
    private javax.swing.JLabel CurrentLabel;
    private javax.swing.JLabel CutTypeBundle;
    private javax.swing.JLabel CutTypeLabel;
    private javax.swing.JLabel GasesBundle;
    private javax.swing.JLabel GasesLabel;
    private javax.swing.JLabel JobEndTimeBundle;
    private javax.swing.JLabel JobEndTimeLabel;
    private javax.swing.JLabel JobStartTimeBundle;
    private javax.swing.JLabel JobStartTimeLabel;
    private javax.swing.JLabel MachineTypeBundle;
    private javax.swing.JLabel MachineTypeLabel;
    private javax.swing.JLabel MaterialBundle;
    private javax.swing.JLabel MaterialLabel;
    private javax.swing.JLabel OperatorNameBundle;
    private javax.swing.JLabel OperatorNameLabel;
    private javax.swing.JLabel ProjectDateBundle;
    private javax.swing.JLabel ProjectDateLabel;
    private javax.swing.JLabel ProjectNameBundle;
    private javax.swing.JLabel ProjectNameLabel;
    private javax.swing.JButton SavePDFButton;
    private javax.swing.JLabel StartWithBundle;
    private javax.swing.JLabel StartWithLabel;
    private javax.swing.JLabel StopWithBundle;
    private javax.swing.JLabel StopWithLabel;
    private javax.swing.JLabel ThicknessBundle;
    private javax.swing.JLabel ThicknessLabel;
    private javax.swing.JTable detailTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void tabloDoldur() {
    String sql = "SELECT * FROM HALUK.STATRECORD WHERE STAT_ID="+indexNo;
    
    
        
    //String sonuc="";
    
        try {
            rs = ajanframe.Stmt.executeQuery(sql);
            int row=0;
            int TotalPierce=0;
            while(rs.next())
                    {
                        if(rs.getString("STARTWITH")!=null)StartWithLabel.setText(rs.getString("STARTWITH"));
                        if(rs.getString("STOPWITH")!=null)StopWithLabel.setText(rs.getString("STOPWITH"));
                        if(rs.getString("MACHINETYPE")!=null)MachineTypeLabel.setText(rs.getString("MACHINETYPE"));
                        if(rs.getString("MATERIAL")!=null)MaterialLabel.setText(rs.getString("MATERIAL"));
                        if(rs.getString("CURRENT")!=null)CurrentLabel.setText(rs.getString("CURRENT"));
                        if(rs.getString("CUTTYPE")!=null)CutTypeLabel.setText(rs.getString("CUTTYPE"));
                        if(rs.getString("GASES")!=null)GasesLabel.setText(rs.getString("GASES"));
                        if(rs.getString("THICKNESS")!=null)ThicknessLabel.setText(rs.getString("THICKNESS"));
                      
                        if(rs.getString("OPERATORNAME")!=null)OperatorNameLabel.setText(rs.getString("OPERATORNAME"));
                        if(rs.getTimestamp("STARTTIME")!=null)ProjectDateLabel.setText(new SimpleDateFormat("MM/dd/yyyy").format(rs.getTimestamp("STARTTIME")));
                        if(rs.getString("PROJENAME")!=null)ProjectNameLabel.setText(rs.getString("PROJENAME"));
                        if(rs.getTimestamp("STARTTIME")!=null&&rs.getTimestamp("ENDTIME")!=null){
                            long milliseconds =   rs.getTimestamp("ENDTIME").getTime()- rs.getTimestamp("STARTTIME").getTime();
                            int seconds = (int) milliseconds / 1000;
                            int hours = seconds / 3600;
                            int minutes = (seconds % 3600) / 60;
                            seconds = (seconds % 3600) % 60;
                            //EllapsedTimeLabel.setText(hours+":"+minutes+":"+seconds+" ");
                            detailTable.getModel().setValueAt(hours+":"+minutes+":"+seconds+" ",15,3);
                            JobStartTimeLabel.setText(new SimpleDateFormat("HH:mm:ss").format(rs.getTimestamp("STARTTIME")));
                            JobEndTimeLabel.setText(new SimpleDateFormat("HH:mm:ss").format(rs.getTimestamp("ENDTIME")));
                            
                                if(rs.getString("ESTIMATEDTOTALTIME")!=null)
                                {
                                    seconds = (int) rs.getDouble("ESTIMATEDTOTALTIME");
                                    hours = seconds / 3600;
                                    minutes = (seconds % 3600) / 60;
                                    seconds = (seconds % 3600) % 60;
                                    detailTable.getModel().setValueAt(hours+":"+minutes+":"+seconds+" ",15,1);
                                }
                            }
                        
                         if(rs.getString("CUTTINGLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("CUTTINGLEN")/100/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,1,1);
                         if(rs.getString("MARKINGLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("MARKINGLEN")/100/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,2,1);
                         if(rs.getString("TRAVELLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("TRAVELLEN")/100/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,3,1);
                         if(rs.getString("TOTALLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("TOTALLEN")/100/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,4,1);
                        
                         if(rs.getString("CUTTINGCONTOURLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("CUTTINGCONTOURLEN")/10/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,1,3);
                         if(rs.getString("MARKINGCONTOURLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("MARKINGCONTOURLEN")/10/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,2,3);
                         if(rs.getString("TRAVELINGCONTOURLEN")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, rs.getDouble("TRAVELINGCONTOURLEN")/10/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,3,3);
                         detailTable.getModel().setValueAt(String.format(ajanframe.FormatMetricInc, (rs.getDouble("TRAVELINGCONTOURLEN")/10/ajanframe.IncCarpan+rs.getDouble("MARKINGCONTOURLEN")/10/ajanframe.IncCarpan+rs.getDouble("CUTTINGCONTOURLEN"))/10/ajanframe.IncCarpan)+ajanframe.MetricIncBirim,4,3);
                         
                        
                         if(rs.getString("CUTTINGPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("CUTTINGPIERCE")+" "+ajanframe.bundle.getString("Adet"),6,1);
                         if(rs.getString("MARKINGPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("MARKINGPIERCE")+" "+ajanframe.bundle.getString("Adet"),7,1);
                         if(rs.getString("TOTALPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("TOTALPIERCE")+" "+ajanframe.bundle.getString("Adet"),8,1);
                        
                         if(rs.getString("REALCUTTINGPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("REALCUTTINGPIERCE")+" "+ajanframe.bundle.getString("Adet"),6,3);
                         if(rs.getString("REALMARKINGPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("REALMARKINGPIERCE")+" "+ajanframe.bundle.getString("Adet"),7,3);
                         if(rs.getString("REALTOTALPIERCE")!=null)detailTable.getModel().setValueAt(rs.getInt("REALTOTALPIERCE")+" "+ajanframe.bundle.getString("Adet"),8,3);
                         
                         
                        if(rs.getString("CUTSPEED")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("CUTSPEED")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),10,1);
                        if(rs.getString("MARKSPEED")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("MARKSPEED")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),11,1);
                        if(rs.getString("TRAVELSPEED")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("TRAVELSPEED")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),12,1);
                        if(rs.getString("SMALLHOLESPEED")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("SMALLHOLESPEED")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),13,1);

                         if(rs.getString("REALCUTSPEEDAVG")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("REALCUTSPEEDAVG")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),10,3);
                        if(rs.getString("REALMARKSPEEDAVG")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("REALMARKSPEEDAVG")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),11,3);
                        if(rs.getString("REALTRAVELSPEEDAVG")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("REALTRAVELSPEEDAVG")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),12,3);
                        if(rs.getString("REALSMALLHOLESPEEDAVG")!=null)detailTable.getModel().setValueAt(String.format(ajanframe.FormatHiz, rs.getDouble("REALSMALLHOLESPEEDAVG")/ajanframe.IncCarpan)+ajanframe.MetricIncBirim+"/"+ajanframe.bundle.getString("Dakika"),13,3);
                        
                        row++;
                        TotalPierce+=rs.getInt("TOTALPIERCE");
                    }
            
        } catch (SQLException ex) {
            Logger.getLogger(StatRecordDb.class.getName()).log(Level.SEVERE, null, ex);

        }
    }
    
    
        class ColorColumnRenderer extends DefaultTableCellRenderer
        {
            Color bkgndColor, fgndColor;
            
            public ColorColumnRenderer(Color bkgnd, Color foregnd) {
                super();
                    
                    bkgndColor = bkgnd;
                    fgndColor = foregnd;
                }
     
            public Component getTableCellRendererComponent
                        (JTable table, Object value, boolean isSelected,
                        boolean hasFocus, int row, int column)
                {
                    Component cell = super.getTableCellRendererComponent
                    (table, value, isSelected, hasFocus, row, column);
  
                        //cell.setBackground( bkgndColor );
                        cell.setForeground( fgndColor );
                        
                        
      
                    return cell;
                }
            }

            public void changeLocale() {
                        SavePDFButton.setText(ajanframe.bundle.getString("KaydetButton")+ " PDF ");
                        OperatorNameBundle.setText(ajanframe.bundle.getString("OperatorName"));          
                        JobStartTimeBundle.setText(ajanframe.bundle.getString("JobStartTime"));          
                        ProjectDateBundle.setText(ajanframe.bundle.getString("ProjectDate"));          
                        JobEndTimeBundle.setText(ajanframe.bundle.getString("JobEndTime"));          
                        StartWithBundle.setText(ajanframe.bundle.getString("StartWith"));          
                        StopWithBundle.setText(ajanframe.bundle.getString("StopWith"));          

                        ProjectNameBundle.setText(ajanframe.bundle.getString("ProjectButton_name"));          
                        MachineTypeBundle.setText(ajanframe.bundle.getString("param.MachineTypeLabel"));
                        MaterialBundle.setText(ajanframe.bundle.getString("cc.MaterialLabel"));
                        CurrentBundle.setText(ajanframe.bundle.getString("cc.CurrentLabel"));
                        GasesBundle.setText(ajanframe.bundle.getString("cc.CutGasesLabel"));
                        CutTypeBundle.setText(ajanframe.bundle.getString("cc.ProcessTypeLabel"));
                        ThicknessBundle.setText(ajanframe.bundle.getString("cc.ThicknessLabel"));

                    detailTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {ajanframe.bundle.getString("CalculatedValues"), null, null, null, ajanframe.bundle.getString("RealValues")},
                            {ajanframe.bundle.getString("TotalCuttingLenght"), null, null, null, ajanframe.bundle.getString("TotalCuttingLenght")},
                            {ajanframe.bundle.getString("TotalMarkingLenght"), null, null, null, ajanframe.bundle.getString("TotalMarkingLenght")},
                            {ajanframe.bundle.getString("TotalTravelingLenght"), null, null, null, ajanframe.bundle.getString("TotalTravelingLenght")},
                            {ajanframe.bundle.getString("TotalLenght"), null, null, null,ajanframe.bundle.getString("TotalLenght")},
                            {null, null, null, null, null},
                            {ajanframe.bundle.getString("CuttingPierce"), null, null, null, ajanframe.bundle.getString("CuttingPierce")},
                            {ajanframe.bundle.getString("MarkingPierce"), null, null, null, ajanframe.bundle.getString("MarkingPierce")},
                            {ajanframe.bundle.getString("TotalPierce"), null, null, null, ajanframe.bundle.getString("TotalPierce")},
                            {null, null, null, null, null},
                            {ajanframe.bundle.getString("cc.lbCutSpeedLabel"), null, null, null, ajanframe.bundle.getString("cc.lbCutSpeedLabel")},
                            {ajanframe.bundle.getString("MarkSpeed"), null, null, null,ajanframe.bundle.getString("MarkSpeed")},
                            {ajanframe.bundle.getString("TravelSpeed"), null, null, null,ajanframe.bundle.getString("TravelSpeed")},
                            { ajanframe.bundle.getString("SmallHoleSpeed"), null, null, null, ajanframe.bundle.getString("SmallHoleSpeed")},
                            {null, null, null, null, null},
                            {ajanframe.bundle.getString("EllapsedTime"),null, null, null,ajanframe.bundle.getString("EllapsedTime")},
                            {null, null, null, null, null},
                            {null, null, null, null, null}
                        },
                        new String [] {
                            "Title 1", "Title 2", "Title 3", "Title 4", "Title 4"
                        }
                    ) {
                        boolean[] canEdit = new boolean [] {
                            false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                        }
                    });
                    detailTable.setTableHeader(null);
                    TableColumn tm = detailTable.getColumnModel().getColumn(3);
                    tm.setCellRenderer(new ColorColumnRenderer(Color.lightGray, Color.blue));
                    tm = detailTable.getColumnModel().getColumn(4);
                    tm.setCellRenderer(new ColorColumnRenderer(Color.lightGray, Color.blue));
                    detailTable.setRowHeight(30);
                    tabloDoldur();
                }

            
    public void SavePdf(File pdfKay) {
            
                String satir="";
        
        
                  try {
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream(pdfKay));
                    document.open();
            
                    document.addTitle("AJAN CNC MACHINE CUTTING STATS");
            
                    
                    Font red = new Font(FontFamily.HELVETICA, 15, Font.NORMAL, BaseColor.RED);
                    Chunk redText = new Chunk("AJAN CNC MACHINE CUTTING STATS", red);
                    Paragraph paragraph = new Paragraph(redText);
                    paragraph.setAlignment(Element.ALIGN_CENTER);
                    document.add(paragraph);
                    paragraph = new Paragraph(" ");document.add(paragraph);document.add(paragraph);
            
            
//            paragraph = new Paragraph("\n\n\n");
//            document.add(paragraph);
                    PdfPTable table = new PdfPTable(4);
                    table.setWidthPercentage(288 / 3.1f);
        
        
        //            table.setWidths(new int[]{5, 3, 1,1});
                    //PdfPCell cell;
        /*cell = new PdfPCell(new Phrase("Table 1"));
        cell.setPadding(1.2f);
        cell.setColspan(3);
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Cell with rowspan 2"));
        cell.setRowspan(2);
        table.addCell(cell);
        
        table.addCell("row 1; cell 1");
        table.addCell("row 1; cell 2");
        table.addCell("row 2; cell 1");
        table.addCell("row 2; cell 2");*/
        //document.add(table);
        table.addCell(ajanframe.statrecord.BaslikCell(ProjectDateBundle.getText())); table.addCell(ProjectDateLabel.getText());      table.addCell(ajanframe.statrecord.BaslikCell(MachineTypeBundle.getText())); table.addCell(MachineTypeLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(ProjectNameBundle.getText())); table.addCell(ProjectDateLabel.getText());      table.addCell(ajanframe.statrecord.BaslikCell(MaterialBundle.getText())); table.addCell(MaterialLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(OperatorNameBundle.getText())); table.addCell(OperatorNameLabel.getText());    table.addCell(ajanframe.statrecord.BaslikCell(CurrentBundle.getText())); table.addCell(CurrentLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(JobStartTimeBundle.getText())); table.addCell(JobStartTimeLabel.getText());    table.addCell(ajanframe.statrecord.BaslikCell(GasesBundle.getText())); table.addCell(GasesLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(JobEndTimeBundle.getText())); table.addCell(JobEndTimeLabel.getText());        table.addCell(ajanframe.statrecord.BaslikCell(CutTypeBundle.getText())); table.addCell(CutTypeLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(StartWithBundle.getText())); table.addCell(StartWithLabel.getText());          table.addCell(ajanframe.statrecord.BaslikCell(ThicknessBundle.getText())); table.addCell(ThicknessLabel.getText());
        table.addCell(ajanframe.statrecord.BaslikCell(StopWithBundle.getText())); table.addCell(StopWithLabel.getText());            table.addCell(""); table.addCell("");
        document.add(table);
        paragraph = new Paragraph(" ");document.add(paragraph);document.add(paragraph);
        paragraph = new Paragraph(" ");document.add(paragraph);document.add(paragraph);
        
        table = new PdfPTable(4);
        table.setWidthPercentage(288 / 3.1f);
        
        table.addCell(ajanframe.statrecord.BaslikCell(ajanframe.bundle.getString("CalculatedValues"))); table.addCell("");                          table.addCell(ajanframe.statrecord.BaslikCell(ajanframe.bundle.getString("RealValues"))); table.addCell("");
        table.addCell(ajanframe.bundle.getString("TotalCuttingLenght"));table.addCell(detailTable.getModel().getValueAt(1, 1).toString());          table.addCell(ajanframe.bundle.getString("TotalCuttingLenght")); table.addCell(detailTable.getModel().getValueAt(1, 3).toString());        
        table.addCell(ajanframe.bundle.getString("TotalMarkingLenght")); table.addCell(detailTable.getModel().getValueAt(2, 1).toString());         table.addCell(ajanframe.bundle.getString("TotalMarkingLenght")); table.addCell(detailTable.getModel().getValueAt(2, 3).toString());
        table.addCell(ajanframe.bundle.getString("TotalTravelingLenght")); table.addCell(detailTable.getModel().getValueAt(3, 1).toString());       table.addCell(ajanframe.bundle.getString("TotalTravelingLenght")); table.addCell(detailTable.getModel().getValueAt(3, 3).toString());
        table.addCell(ajanframe.bundle.getString("TotalLenght")); table.addCell(detailTable.getModel().getValueAt(4, 1).toString());                table.addCell(ajanframe.bundle.getString("TotalLenght")); table.addCell(detailTable.getModel().getValueAt(4, 3).toString());
        table.addCell(""); table.addCell("");                                                                                                       table.addCell(""); table.addCell("");
        table.addCell(ajanframe.bundle.getString("CuttingPierce")); table.addCell(detailTable.getModel().getValueAt(6, 1).toString());              table.addCell(ajanframe.bundle.getString("CuttingPierce")); table.addCell(detailTable.getModel().getValueAt(6, 3).toString());
        table.addCell(ajanframe.bundle.getString("MarkingPierce")); table.addCell(detailTable.getModel().getValueAt(7, 1).toString());              table.addCell(ajanframe.bundle.getString("MarkingPierce")); table.addCell(detailTable.getModel().getValueAt(7, 3).toString());
        table.addCell(ajanframe.bundle.getString("TotalPierce")); table.addCell(detailTable.getModel().getValueAt(8, 1).toString());                table.addCell(ajanframe.bundle.getString("TotalPierce")); table.addCell(detailTable.getModel().getValueAt(8, 3).toString());
        table.addCell(""); table.addCell("");                                                                                                       table.addCell(""); table.addCell("");
        table.addCell(ajanframe.bundle.getString("cc.lbCutSpeedLabel")); table.addCell(detailTable.getModel().getValueAt(10, 1).toString());        table.addCell(ajanframe.bundle.getString("cc.lbCutSpeedLabel")); table.addCell(detailTable.getModel().getValueAt(10, 3).toString());
        table.addCell(ajanframe.bundle.getString("MarkSpeed")); table.addCell(detailTable.getModel().getValueAt(11, 1).toString());                 table.addCell(ajanframe.bundle.getString("MarkSpeed")); table.addCell(detailTable.getModel().getValueAt(11, 3).toString());
        table.addCell(ajanframe.bundle.getString("TravelSpeed")); table.addCell(detailTable.getModel().getValueAt(12, 1).toString());               table.addCell(ajanframe.bundle.getString("TravelSpeed")); table.addCell(detailTable.getModel().getValueAt(12, 3).toString());
        table.addCell(ajanframe.bundle.getString("SmallHoleSpeed")); table.addCell(detailTable.getModel().getValueAt(13, 1).toString());            table.addCell(ajanframe.bundle.getString("SmallHoleSpeed")); table.addCell(detailTable.getModel().getValueAt(13, 3).toString());
        table.addCell(""); table.addCell("");                                                                                                       table.addCell(""); table.addCell("");
        table.addCell(ajanframe.bundle.getString("EllapsedTime")); table.addCell(detailTable.getModel().getValueAt(15, 1).toString());              table.addCell(ajanframe.bundle.getString("EllapsedTime")); table.addCell(detailTable.getModel().getValueAt(15, 3).toString());
        document.add(table);
         document.close();
         
         
         
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }
    
    





}
