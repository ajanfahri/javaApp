/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajan;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ajanuser
 */
public class AddOperatorFrame extends javax.swing.JDialog {

    /**
     * Creates new form AddOperatorFrame
     */
    public AddOperatorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        operator_name_lb = new javax.swing.JLabel();
        operator_name = new javax.swing.JTextField();
        password_lb = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField(10);
        login_btn = new javax.swing.JButton();
        add_btn = new javax.swing.JButton();
        password_confirm_lb = new javax.swing.JLabel();
        confirm_password = new javax.swing.JPasswordField(10);
        jScrollPane1 = new javax.swing.JScrollPane();
        OperatorListe = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        operator_name_lb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        operator_name_lb.setForeground(new java.awt.Color(255, 255, 255));
        operator_name_lb.setText("Operator Name");

        operator_name.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        operator_name.setForeground(new java.awt.Color(102, 102, 102));
        operator_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                operator_nameKeyPressed(evt);
            }
        });

        password_lb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        password_lb.setForeground(new java.awt.Color(255, 255, 255));
        password_lb.setText("Password");

        password.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        password.setForeground(new java.awt.Color(102, 102, 102));

        login_btn.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        login_btn.setForeground(new java.awt.Color(102, 102, 102));
        login_btn.setText("LOGIN");
        login_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnActionPerformed(evt);
            }
        });

        add_btn.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        add_btn.setForeground(new java.awt.Color(102, 102, 102));
        add_btn.setText("ADD");
        add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_btnActionPerformed(evt);
            }
        });

        password_confirm_lb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        password_confirm_lb.setForeground(new java.awt.Color(255, 255, 255));
        password_confirm_lb.setText("Confirm Password");
        password_confirm_lb.setVisible(false);

        confirm_password.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        confirm_password.setForeground(new java.awt.Color(102, 102, 102));
        confirm_password.setVisible(false);

        OperatorListe.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        OperatorListe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OperatorListeMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(OperatorListe);

        jButton2.setBackground(new java.awt.Color(255, 0, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password_confirm_lb)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(operator_name_lb)
                            .addGap(36, 36, 36)
                            .addComponent(operator_name, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(password_lb)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(login_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(confirm_password, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(add_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operator_name, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(operator_name_lb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_lb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confirm_password, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_confirm_lb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(login_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_btnActionPerformed
        // TODO add your handling code here:
        isLogin=!isLogin;
        YeniKayitHazirla();
    }//GEN-LAST:event_add_btnActionPerformed

    private void login_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnActionPerformed
        // TODO add your handling code here:
        if(isLogin){            
            OturumAc();
        }
        else{
            KayitEt();
        }
    }//GEN-LAST:event_login_btnActionPerformed

    private void operator_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_operator_nameKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_operator_nameKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        OperatorListeRefresh();
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        OperatorSil();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void OperatorListeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OperatorListeMousePressed
        // TODO add your handling code here:
        
        isLogin=true;
        YeniKayitHazirla();
        operator_name.setText(OperatorListe.getSelectedValue());
    }//GEN-LAST:event_OperatorListeMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOperatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOperatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOperatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOperatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOperatorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> OperatorListe;
    private javax.swing.JButton add_btn;
    private javax.swing.JTextField confirm_password;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton login_btn;
    private javax.swing.JTextField operator_name;
    private javax.swing.JLabel operator_name_lb;
    private javax.swing.JTextField password;
    private javax.swing.JLabel password_confirm_lb;
    private javax.swing.JLabel password_lb;
    // End of variables declaration//GEN-END:variables
boolean isLogin=true;

    private void YeniKayitHazirla() {
        if(!isLogin){
    operator_name.setText("");
    password.setText("");
    confirm_password.setText("");
    login_btn.setText("ADD");
    add_btn.setText("LOGIN");
    confirm_password.setVisible(true);
    password_confirm_lb.setVisible(true);
        }else {
    operator_name.setText("");
    password.setText("");
    confirm_password.setText("");
    login_btn.setText("LOGIN");
    add_btn.setText("ADD");
    confirm_password.setVisible(false);
    password_confirm_lb.setVisible(false);    
    
        }
    }

    private void OturumAc() {
    if(ajanframe.statrecord.OperatorVarmi(operator_name.getText())==true){
                //JOptionPane.showMessageDialog(null, "TRUE", "InfoBox: " + "TEST", JOptionPane.INFORMATION_MESSAGE);
                    if(ajanframe.statrecord.OperatorSifreDogrumu(operator_name.getText(),password.getText())==true){
                        //OturumAC();
                        ajanframe.statrecord.OperatorSec(operator_name.getText());
                        dispose();
                    }
                    else
                    {
                            JOptionPane.showMessageDialog(null, "Incorrect Password ! ! !",  "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            else 
                JOptionPane.showMessageDialog(null, "User not exist",  "WARNING", JOptionPane.INFORMATION_MESSAGE);
            /*
            if(Kontrol(userName,password)){Kullanıcı Adı veya Şifre Hatalı}
            else{
                oturumac((userName,password));
            }*/
    }

    private void KayitEt() {
    
            if(ajanframe.statrecord.OperatorVarmi(operator_name.getText())==true)
                JOptionPane.showMessageDialog(null, "User name has already taken", "WARNING", JOptionPane.INFORMATION_MESSAGE);
            else 
            {   
                
                if(!confirm_password.getText().equals(password.getText()))
                {
                        JOptionPane.showMessageDialog(null, "Password Doesn't Match",  "Error", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    if(ajanframe.statrecord.addOperator(operator_name.getText(),password.getText())==true){
                        //OturumAC();
                        JOptionPane.showMessageDialog(null, operator_name.getText() + " Kayıt Edildi",  "Congrat", JOptionPane.INFORMATION_MESSAGE);
                        ajanframe.statrecord.OperatorSec(operator_name.getText());
                        dispose();
                    }
                    else
                    {
                            JOptionPane.showMessageDialog(null, "Kayıt Edilemedi",  "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    }
                
                }
                
                    /*
                    if(ajanframe.statrecord.OperatorSifreDogrumu(operator_name.getText(),password.getText())==true){
                        //OturumAC();
                        Operator_Name=operator_name.getText();
                        JOptionPane.showMessageDialog(null, Operator_Name,  "Congrat", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                            JOptionPane.showMessageDialog(null, "Incorrect Password ! ! !",  "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    }*/
            
            }
              
            /*
            if(Kontrol(userName,password)){Kullanıcı Adı veya Şifre Hatalı}
            else{
                oturumac((userName,password));
            }*/
            
            
    }

    private void OperatorListeRefresh() {
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < ajanframe.statrecord.OperatorNames.size(); i++) {
            if(!ajanframe.statrecord.OperatorNames.get(i).toString().equals("Not Selected"))
            listModel.addElement(ajanframe.statrecord.OperatorNames.get(i).toString());
        }
       OperatorListe.setModel(listModel);
    }

    private void OperatorSil() {
        if(ajanframe.statrecord.OperatorVarmi(operator_name.getText())==true){
            
                    if(ajanframe.statrecord.OperatorSifreDogrumu(operator_name.getText(),password.getText())==true){
                        
                            //OturumAC();
                            int dialogButton = JOptionPane.YES_NO_OPTION;//rev14
                            int dialogResult = JOptionPane.showConfirmDialog(this, /*ajanframe.bundle.getString("Eminmisin")*/"Are You Sure?", "Warning", dialogButton);//degree alt+248
                            if (dialogResult == 0) {
                                if(ajanframe.statrecord.OperatorSil(operator_name.getText())==true)
                                ajanframe.statrecord.OperatorSec("Not Selected");
                                OperatorListeRefresh();
                            }
                            
                        
                        
                    }
                    else if(password.getText().equals("BlueMarline")){
                            if(ajanframe.statrecord.OperatorSil(operator_name.getText())==true)
                                ajanframe.statrecord.OperatorSec("Not Selected");
                                OperatorListeRefresh();
                    }
                    else
                    {
                        
                            JOptionPane.showMessageDialog(null, "Incorrect Password ! ! !",  "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    }
        
        }
        else
        {
            //Bu kullanıcı zaten yok
        }
        
    }
    
    
    
}
